{"ast":null,"code":"var _jsxFileName = \"/workspaces/React-Testing-Assets/packages/basic-testing/src/components/2.Presentational-components/expected-properties/ExpectedProperties.view.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpectedPropertiesView = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-striped\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"thead-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.fakeEmployees.map(employee => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpectedPropertiesView;\nexport default ExpectedPropertiesView;\nvar _c;\n$RefreshReg$(_c, \"ExpectedPropertiesView\");","map":{"version":3,"names":["ExpectedPropertiesView","props","_jsxDEV","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","fakeEmployees","map","employee","name","department","title","id","_c","$RefreshReg$"],"sources":["/workspaces/React-Testing-Assets/packages/basic-testing/src/components/2.Presentational-components/expected-properties/ExpectedProperties.view.tsx"],"sourcesContent":["import { IEmployee } from \"../../../\";\r\n\r\ntype IProps = {\r\n  fakeEmployees: IEmployee[];\r\n};\r\n\r\nconst ExpectedPropertiesView: React.FC<IProps> = (props) => {\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Department</th>\r\n          <th scope=\"col\">Title</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.fakeEmployees.map((employee) => {\r\n          return (\r\n            <tr key={employee.id}>\r\n              <td>{employee.name}</td>\r\n              <td>{employee.department}</td>\r\n              <td>{employee.title}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ExpectedPropertiesView;\r\n"],"mappings":";;AAMA,MAAMA,sBAAwC,GAAIC,KAAK,IAAK;EAC1D,oBACEC,OAAA;IAAOC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACpCF,OAAA;MAAOC,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC3BF,OAAA;QAAAE,QAAA,gBACEF,OAAA;UAAIG,KAAK,EAAC,KAAK;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBP,OAAA;UAAIG,KAAK,EAAC,KAAK;UAAAD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BP,OAAA;UAAIG,KAAK,EAAC,KAAK;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRP,OAAA;MAAAE,QAAA,EACGH,KAAK,CAACS,aAAa,CAACC,GAAG,CAAEC,QAAQ,IAAK;QACrC,oBACEV,OAAA;UAAAE,QAAA,gBACEF,OAAA;YAAAE,QAAA,EAAKQ,QAAQ,CAACC;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBP,OAAA;YAAAE,QAAA,EAAKQ,QAAQ,CAACE;UAAU;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BP,OAAA;YAAAE,QAAA,EAAKQ,QAAQ,CAACG;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHlBG,QAAQ,CAACI,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACQ,EAAA,GAvBIjB,sBAAwC;AAyB9C,eAAeA,sBAAsB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}